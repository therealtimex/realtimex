#!/bin/bash



# Check and stop redis-server
# stop_process "redis-server"
kill -9 $(lsof -ti:6379)

# Check and stop rton-server
# stop_process "server-rton"
kill -9 $(lsof -ti:8001)

# Check and stop rton-server
# stop_process "server-rton"
kill -9 $(lsof -ti:8002)

kill -9 $(lsof -ti:3001)


SERVICE='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'
# Check if port 9222 is in use
CHROME_PID=$(ps -ef | grep -v grep |grep -i "$SERVICE" | awk '{print $2;}')


if [[ -n "$CHROME_PID" ]]; then
    result=`osascript -e 'display dialog "Close Google Chrome to begin?" with title "RealTimeX.AI" buttons {"Continue", "Close"}'`
    if [[ "$result" = "button returned:Continue" ]]; then
        echo "Killing all Chrome instances ..."
        # Wait for processes to terminate
        # sleep 10
        # Kill all Chrome instances
        # Display dialog using osascript
        osascript -e 'tell application "System Events" to display dialog "RealTimeX.AI is getting ready..." with title "RealTimeX.AI" buttons {"Please wait!"} giving up after 100000' &
        killall "Google Chrome"
        sleep 5
    else
        exit 0
    fi
else
    # Display dialog using osascript
    osascript -e 'tell application "System Events" to display dialog "RealTimeX.AI is getting ready..." with title "RealTimeX.AI" buttons {"Please wait!"} giving up after 100000' &
    echo "Chrome process is not running"
    sleep 2
fi

if [ -f "/Applications/RealTimeX AI.app/Contents/Resources/realtimex-ai-server.zip" ]; then
    osascript -e 'tell application "System Events" to click button "Please wait!" of window "RealTimeX.AI" of process "System Events"' 

    # Display dialog using osascript
    osascript -e 'tell application "System Events" to display dialog "RealTimeX.AI will take 1-2 minutes on the first time..." with title "RealTimeX.AI" buttons {"Please wait!"} giving up after 100000' &
    
    cd /Applications/RealTimeX\ AI.app/Contents/Resources && unzip -qq -o realtimex-ai-server.zip && rm -f realtimex-ai-server.zip
    cd /Applications/RealTimeX\ AI.app/Contents/Resources/realtimex-ai-server/ && python_env/bin/python -m pip uninstall -y rton_server && python_env/bin/python -m pip install -e realtimex-on/module/rton_server
    cd /Applications/RealTimeX\ AI.app/Contents/Resources/realtimex-ai-server/ && python_env/bin/python -m pip uninstall -y dynamic_agents_server && python_env/bin/python -m pip install -e dynamic-agents/module/dynamic_agents_server
fi

if [ -f "/Applications/RealTimeX AI.app/Contents/Resources/server.zip" ]; then
    cd /Applications/RealTimeX\ AI.app/Contents/Resources && unzip -qq -o server.zip && rm -f server.zip
fi



echo "Start new Chrome instances in debug mode ..."







echo "Start Redis Server"
/Applications/RealTimeX\ AI.app/Contents/MacOS/redis-server &

echo "Start REALTIMEX.AI ..."


cd /Applications/RealTimeX\ AI.app/Contents/Resources/realtimex-ai-server/ && nohup python_env/bin/python dynamic-agents/server.py > /Applications/RealTimeX\ AI.app/Contents/Resources/dynamic-agents.out 2>&1 &
cd /Applications/RealTimeX\ AI.app/Contents/Resources/realtimex-ai-server/ && nohup python_env/bin/python realtimex-on/server.py > /Applications/RealTimeX\ AI.app/Contents/Resources/realtimex-on.out 2>&1 &

cd /Applications/RealTimeX\ AI.app/Contents/Resources/server/ && NODE_ENV=development nohup node_env/bin/node index.js > /Applications/RealTimeX\ AI.app/Contents/Resources/server.out 2>&1 &


# Wait until a process is listening on port 8001
while ! lsof -ti:8002 > /dev/null; do
  sleep 1
done

# Close the dialog by killing the process
osascript -e 'tell application "System Events" to click button "Please wait!" of window "RealTimeX.AI" of process "System Events"' 

/Applications/RealTimeX\ AI.app/Contents/MacOS/app &

